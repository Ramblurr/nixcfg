#                 â–ˆâ–ˆ      
#                â–‘â–ˆâ–ˆ      
#  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–‘â–ˆâ–ˆ      
# â–‘â–‘â–‘â–‘â–ˆâ–ˆ  â–ˆâ–ˆâ–‘â–‘â–‘â–‘ â–‘â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  
#    â–ˆâ–ˆ  â–‘â–‘â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ â–‘â–ˆâ–ˆâ–‘â–‘â–‘â–ˆâ–ˆ 
#   â–ˆâ–ˆ    â–‘â–‘â–‘â–‘â–‘â–ˆâ–ˆâ–‘â–ˆâ–ˆ  â–‘â–ˆâ–ˆ 
#  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ â–‘â–ˆâ–ˆ  â–‘â–ˆâ–ˆ 
# â–‘â–‘â–‘â–‘â–‘â–‘ â–‘â–‘â–‘â–‘â–‘â–‘  â–‘â–‘   â–‘â–‘  
#
#  â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
# â–‘â–“ author â–“ xero <x@xero.nu>
# â–‘â–“ code   â–“ http://code.xero.nu/dotfiles
# â–‘â–“ mirror â–“ http://git.io/.files
# â–‘â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
# â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

#ICO_DIRTY="âš¡"
ICO_DIRTY="â†¯"
#ICO_DIRTY="*"
#ICO_AHEAD="â†‘"
ICO_AHEAD="ðŸ ™"
#ICO_AHEAD="â–²"
#ICO_BEHIND="â†“"
ICO_BEHIND="ðŸ ›"
#ICO_BEHIND="â–¼"
ICO_DIVERGED="â¥®"
COLOR_HOST="%F{red}"
COLOR_ROOT="%F{red}"
COLOR_USER="%F{yellow}"
COLOR_NORMAL="%F{white}"
PROMPT_STYLE="classic"

if [[ $(hostname) == "quine" ]]; then
  COLOR_HOST="%F{green}"
  COLOR_USER="%F{green}"
fi

#â–ˆâ–“â–’â–‘ allow functions in the prompt
setopt PROMPT_SUBST
autoload -Uz colors && colors

#â–ˆâ–“â–’â–‘ colors for permissions
if [[ "$EUID" -ne "0" ]]
then  # if user is not root
  USER_LEVEL="${COLOR_USER}"
else # root!
  USER_LEVEL="${COLOR_ROOT}"
fi

if [[ $(hostname) != "toolbox" && -d "$HOME/.local/bin-toolbox" ]]; then
  USER_LEVEL="${COLOR_HOST}"
fi


#â–ˆâ–“â–’â–‘ git prompt
GIT_PROMPT() {
  test=$(git rev-parse --is-inside-work-tree 2> /dev/null)
  if [ ! "$test" ]
  then
    case "$PROMPT_STYLE" in
      ascii)
        echo "$reset_color%F{yellow}â–’â–‘"
      ;;
      arrows)
        echo "$reset_color%F{yellow}î‚°"
      ;;
    esac
    return
  fi
  ref=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD | sed 's!remotes/!!' 2> /dev/null)
  dirty="" && [[ $(git rev-parse --symbolic-full-name --abbrev-ref HEAD) != "" ]] && dirty=$ICO_DIRTY
  stat=$(git status | sed -n 2p)
  case "$stat" in
    *ahead*)
      stat=$ICO_AHEAD
    ;;
    *behind*)
      stat=$ICO_BEHIND
    ;;
    *diverged*)
      stat=$ICO_DIVERGED
    ;;
    *)
      stat=""
    ;;
  esac
  case "$PROMPT_STYLE" in
    ninja)
      echo "${COLOR_NORMAL}${ref}${dirty}${stat}"
    ;;
    ascii)
      echo "%{$bg[magenta]%}%F{yellow}â–“â–’â–‘ %F{black}${ref}${dirty}${stat} $reset_color%F{magenta}â–’â–‘"
    ;;
    arrows)
      echo "%{$bg[magenta]%}%F{yellow}î‚° %F{black}${ref}${dirty}${stat} $reset_color%F{magenta}î‚°"
    ;;
    *)
    echo "${USER_LEVEL}â”€[${COLOR_NORMAL}"${ref}${dirty}${stat}"${USER_LEVEL}]"
    ;;
  esac
}
case "$PROMPT_STYLE" in
#â–ˆâ–“â–’â–‘ ascii
ascii)
PROMPT='%{$bg[yellow]%} %F{black}%~ $(GIT_PROMPT)$reset_color 
%f'
;;
#â–ˆâ–“â–’â–‘ arrows
arrows)
PROMPT='%{$bg[yellow]%}%F{black}î‚° %~ $(GIT_PROMPT)$reset_color 
%f'
;;
#â–ˆâ–“â–’â–‘ ninja
ninja)
PROMPT='%F{white}
        â–Ÿâ–™  ${USER_LEVEL}%~   %F{white}$(GIT_PROMPT) %F{white}
â–Ÿâ–’${USER_LEVEL}â–‘â–‘â–‘â–‘â–‘â–‘â–‘%F{white}â–œâ–™â–œâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–›
â–œâ–’${USER_LEVEL}â–‘â–‘â–‘â–‘â–‘â–‘â–‘%F{white}â–Ÿâ–›â–Ÿâ–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–›
        â–œâ–›  
            %f'
;;
#â–ˆâ–“â–’â–‘ dual line
dual)
PROMPT='${USER_LEVEL}â”Œ[${COLOR_NORMAL}%~${USER_LEVEL}]$(GIT_PROMPT)
${USER_LEVEL}â””â”€ - %f'
;;
#â–ˆâ–“â–’â–‘ classic
*)
PROMPT='${USER_LEVEL}[${COLOR_NORMAL}%~${USER_LEVEL}]$(GIT_PROMPT) âˆ´ %f'
;;
esac
