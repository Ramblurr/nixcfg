#!/usr/bin/env bash

get_current_sink() {
  local current_sink

  current_sink="$(pactl get-default-sink)"
  pactl list sinks short | grep "$current_sink" | head -n 1 | cut -f 1
}

get_current_sink_name() {
  local current_sink

  current_sink="$(pactl get-default-sink)"
  pactl --format json list sinks |\
    jq -r ".[] | select(.name == \"${current_sink}\").description" | tr -d '\n'
}

get_next_sink() {
  local ii=0
  local sinks=()
  local next_sink
  local current_sink

  current_sink="$(get_current_sink)"

  while read -r line; do
    local sink_nr

    sink_nr="$(echo "$line" | cut -f 1)"
    sinks[$ii]="$sink_nr"
    ((ii++))
  done < <(pactl list sinks short | sort -n)

  if [[ "${#sinks[@]}" == 0 ]]; then
    return 1
  fi

  if [[ "$current_sink" -ge "${sinks[-1]}" ]]; then
    next_sink="${sinks[0]}"
  else
    for sink in "${sinks[@]}"; do
      if [[ "$current_sink" -lt "$sink" ]]; then
        next_sink="$sink"
        break
      fi
    done
  fi

  echo "$next_sink"
}

set_default_sink() {
  if [[ "$#" == 0 ]]; then
    return 1
  fi
  pactl set-default-sink "$1"
}

output() {
  sink_name="$(get_current_sink_name)"
  shopt -s nocasematch
  if [[ $sink_name =~ "headphone" ]]; then
    alt="headphone"
  else
    alt="speaker"
  fi
   jq --null-input --compact-output --monochrome-output \
    --arg alt "$alt" \
    --arg sink_name "$sink_name" \
    '{"text": "", "alt": $alt, "tooltip": $sink_name, "class": "", "percentage": 0 }'
}

toggle() {
  local next_sink

  next_sink="$(get_next_sink)"
  set_default_sink "$next_sink"
  output
}

if [[ "$1" = "get" ]]; then
  output
else
  toggle "$@"
fi
